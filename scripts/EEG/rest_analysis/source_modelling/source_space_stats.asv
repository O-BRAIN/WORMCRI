%% Significant results - source space

% DFA * condition (before FDR)
T_dfa_source = readtable([paths.data 'results_matrix_DFA.csv']);

h = plot_stats(T_dfa_source.p_DFA < 0.01, sa, v, [0 1], cm17a, 'source');
sgtitle(['eLORETA | fixed | DFA * condition | no FDR']);
exportgraphics(h, [stats subfolder 'significant_sources_DFA_condition.png']);
close(h);

num_voxels_roi_DFA = count_significant(T_dfa_source.p_ < 0.01, sa);
fprintf('DFA * condition - significant sources before FDR correction:\n%s\n', ...
    list_significant(num_voxels_roi_DFA, sa));

% DFA * condition (after FDR)
h = plot_stats(T_dfa_source.p_DFA_FDR < 0.05, sa, v, [0 1], cm17a, 'source');
sgtitle([method ' | ' orientations ' | source | DFA * condition | after FDR']);
exportgraphics(h, [stats subfolder 'significant_sources_DFA_condition_FDR.png']);
close(h);

num_voxels_roi_DFA_FDR = count_significant(T_dfa_source.p_DFA_FDR < 0.05, sa);
fprintf('DFA * condition - significant sources after FDR correction:\n%s\n', ...
    list_significant(num_voxels_roi_DFA_FDR, sa));

% DFA * condition (t-values)
lim = max(abs(T_dfa_source.V6));
h = plot_stats(T_dfa_source.V6, sa, v, [-lim lim], cm17, 'source');
sgtitle([method ' | ' orientations ' | source | DFA * condition | t-value, update']);
exportgraphics(h, [stats subfolder 'tvalue_update_DFA_condition.png']);
close(h);

% DFA * condition (chi-squared)
lim = max(abs(T_dfa_source.chisq_DFA));
h = plot_stats(T_dfa_source.chisq_DFA, sa, v, [0 lim], cm17a, 'source');
sgtitle([method ' | ' orientations ' | source | DFA * condition | chi-squared']);
exportgraphics(h, [stats subfolder 'chi_squared_DFA_condition.png']);
close(h);

% slope * AA * condition (before FDR)
T_slope_source = readtable([paths.data subfolder 'results_matrix_oneF.csv']);

h = plot_stats(T_slope_source.p_oneF_AA < 0.01, sa, v, [0 1], cm17a, 'source');
sgtitle([method ' | ' orientations ' | source | slope * AAratio * condition | no FDR']);
exportgraphics(h, [stats subfolder 'significant_sources_slope_condition_AAratio.png']);
close(h);

num_voxels_roi_oneF_AA = count_significant(T_slope_source.p_oneF_AA < 0.01, sa);
fprintf('slope * AAratio * condition - significant sources before FDR correction:\n%s\n', ...
    list_significant(num_voxels_roi_oneF_AA, sa));

% slope * AA * condition (after FDR)
h = plot_stats(T_slope_source.p_oneF_AA_FDR < 0.05, sa, v, [0 1], cm17a, 'source');
sgtitle([method ' | ' orientations ' | source | slope * AAratio * condition | after FDR']);
exportgraphics(h, [stats subfolder 'significant_sources_slope_condition_AAratio_FDR.png']);
close(h);

num_voxels_roi_oneF_AA_FDR = count_significant(T_slope_source.p_oneF_AA_FDR < 0.05, sa);
fprintf('slope * AAratio * condition - significant sources after FDR correction:\n%s\n', ...
    list_significant(num_voxels_roi_oneF_AA_FDR, sa));

% slope * AA * condition (t-values)
lim = max(abs(T_slope_source.t_update_oneF_AA));
h = plot_stats(T_slope_source.t_update_oneF_AA, sa, v, [-lim lim], cm17, 'source');
sgtitle([method ' | ' orientations ' | source | slope * AAratio * condition | t-value, update']);
exportgraphics(h, [stats subfolder 'tvalue_update_slope_condition_AAratio.png'], 'Resolution', 300);
%close(h);

% slope * AA * condition (chi-squared)
lim = max(abs(T_slope_source.chisq_oneF_AA));
h = plot_stats(T_slope_source.chisq_oneF_AA, sa, v, [0 lim], cm17a, 'source');
sgtitle([method ' | ' orientations ' | source | slope * AAratio * condition | chi-squared']);
exportgraphics(h, [stats subfolder 'chi_squared_slope_condition_AAratio.png']);
close(h);


%% Significant results - ROI space

% DFA * condition
T_dfa_roi = readtable([paths.data subfolder 'results_matrix_DFA_roi.csv']);

h = plot_stats(T_dfa_roi.p_DFA < 0.05, sa, v, [0 1], cm17a, 'roi');
sgtitle([method ' | ' orientations ' | ROI | DFA * condition | no FDR']);
exportgraphics(h, [stats subfolder 'significant_rois_DFA_condition.png']);
close(h);

fprintf('DFA * condition - significant ROIs before FDR correction:\n%s\n', ...
    strjoin(sa.HO_labels(T_dfa_roi.p_DFA < 0.05), '\n'));

h = plot_stats(T_dfa_roi.p_DFA_FDR < 0.05, sa, v, [0 1], cm17a, 'roi');
sgtitle([method ' | ' orientations ' | ROI | DFA * condition | after FDR']);
exportgraphics(h, [stats subfolder 'significant_rois_DFA_condition_FDR.png']);
close(h);

fprintf('DFA * condition - significant ROIs after FDR correction:\n%s\n', ...
    strjoin(sa.HO_labels(T_dfa_roi.p_DFA_FDR < 0.05), '\n'));


% slope * AA * condition
T_slope_roi = readtable([paths.data subfolder 'results_matrix_oneF_roi.csv']);

h = plot_stats(T_slope_roi.p_oneF_AA < 0.05, sa, v, [0 1], cm17a, 'roi');
sgtitle([method ' | ' orientations ' | ROI | slope * AAratio * condition | no FDR']);
exportgraphics(h, [stats subfolder 'significant_rois_slope_condition_AAratio.png']);
close(h);

fprintf('slope * AAratio * condition - significant ROIs before FDR correction:\n%s\n', ...
    strjoin(sa.HO_labels(T_slope_roi.p_oneF_AA < 0.05), '\n'));

h = plot_stats(T_slope_roi.p_oneF_AA_FDR < 0.05, sa, v, [0 1], cm17a, 'roi');
sgtitle([method ' | ' orientations ' | ROI | slope * AAratio * condition | after FDR']);
exportgraphics(h, [stats subfolder 'significant_rois_slope_condition_AAratio_FDR.png']);
close(h);

fprintf('slope * AAratio * condition - significant ROIs after FDR correction:\n%s\n', ...
    strjoin(sa.HO_labels(T_slope_roi.p_oneF_AA_FDR < 0.05), '\n'));



%% T-values (update condition)

method = 'eLORETA';
orientations = 'free';
subfolder = [method '_' orientations '/'];

T_dfa = readtable([paths.data subfolder 'results_matrix_DFA.csv']);
T_dfa.Properties.VariableNames = {'Index', 'RIndex', 'P1', 'Sig1', 'P2', 'Sig2', 'Tup'};

% Open the figure
h = figure('Position', [10 10 1100 400]);

% Setup the layout
views = [
    v.leftlateral, v.rightlateral, v.dorsal, v.colorbar; ...
    v.leftmedial, v.rightmedial, v.ventral, v.empty;
];

lim = max(abs(T_dfa.Tup));

allplots_cortex_subplots(sa, cort5K2full(T_dfa.Tup, sa), ...
    [-lim lim], cm17, 't-value', 1, 'views', views);
sgtitle('DFA * condition | t-value (update condition)');

exportgraphics(h, [paths.plot 'significant_sources_DFA_condition.png']);


T_slope = readtable([paths.data subfolder 'results_matrix_oneF.csv']);
T_slope.Properties.VariableNames = {'Index', 'RIndex', 'P1', 'Sig1', 'P2', 'Sig2', 'Tup'};

% Open the figure
h = figure('Position', [10 10 1100 400]);

% Setup the layout
views = [
    v.leftlateral, v.rightlateral, v.dorsal, v.colorbar; ...
    v.leftmedial, v.rightmedial, v.ventral, v.empty;
];

lim = max(abs(T_slope.Tup));

allplots_cortex_subplots(sa, cort5K2full(T_slope.Tup, sa), ...
    [-lim lim], cm17, 't-value', 1, 'views', views);
sgtitle('1/f slope * condition * AAratio | t-value (update condition)');
